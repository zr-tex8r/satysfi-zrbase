% zresult0.satyg: ZR modules for failable results
%
% Copyright (c) 2019-2020 Takayuki YATO (aka. "ZR")
%   GitHub:   https://github.com/zr-tex8r
%   Twitter:  @zr_tex8r
% Distributed under the MIT License.
@require: zexn0

%=========================================================== type 'result'

% The type 'a result is similar to 'a Result.t of OCaml.

type 'a result = Ok of 'a % success
               | Error of string % failure

%=========================================================== module ZResult0
module ZResult0 : sig

% Converts a result to an option.
val to-option : 'a result -> 'a option
% Converts an option to a result.
val of-option : 'a option -> 'a result
% Gets the content of a result.
val force : 'a result -> 'a

end = struct

let-rec to-option | (Ok v) = Some v
                  | (Error e) = None

let-rec of-option | (Some v) = Ok v
                  | (None) = Error `no value`

let-rec force | (Ok v) = v
              | (Error e) = ZExn0.raise (ZExn0.make `Error-Result` e)

end
%=========================================================== all done
%% EOF
