% zl0.satyg: ZR modules for lengths
%
% Copyright (c) 2019-2020 Takayuki YATO (aka. "ZR")
%   GitHub:   https://github.com/zr-tex8r
%   Twitter:  @zr_tex8r
% Distributed under the MIT License.

% Note: The functions in ZL0 must be named uniquely, since it is
% presumed that ZL0 will be opened.

%=========================================================== module ZL0
module ZL0 : sig

% Returns the negative of the length.
val lneg : length -> length
% Whether the given two floats are equal.
% Note: Beware that floats are inexact.
val lequal : length -> length -> bool
% `lnear e x y` tests if the difference of x and y is smaller than or
% equal to e.
val lnear : length -> length -> length -> bool
% Returns the smaller of the two lengths.
val lmin : length -> length -> length
% Returns the greater of the two lengths.
val lmax : length -> length -> length
% Converts a length to a string.
val string-of-length : length -> string

end = struct

let lneg x = 0pt -' x
let lequal x y = not (x <' y || x >' y)
let lnear e x y =
  let d = if x >' y then x -' y else y -' x in
  not (d >' e)
let lmin x y = if x <' y then x else y
let lmax x y = if x >' y then x else y

let string-of-length x =
  let xs = show-float (x /' 1pt) in
  let pu = string-length xs - 1 in
  if string-same (string-sub xs pu 1) `.` then
    string-sub xs 0 pu ^ `pt`
  else xs ^ `pt`

end
%=========================================================== all done
%% EOF
